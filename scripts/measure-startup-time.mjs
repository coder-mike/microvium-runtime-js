import { performance } from 'perf_hooks';
import fs from 'fs';

// This is the hello-world test case
const snapshot = new Uint8Array([0x7,0x1c,0x7,0x0,0x7c,0x0,0xaa,0xdb,0x3,0x0,0x0,0x0,0x1c,0x0,0x1e,0x0,0x22,0x0,0x22,0x0,0x28,0x0,0x2c,0x0,0x6a,0x0,0x72,0x0,0x1,0x0,0x1,0x0,0x5d,0x0,0x71,0x0,0x6d,0x0,0x1,0x0,0x39,0x0,0x31,0x0,0x0,0x0,0x5,0x40,0x70,0x75,0x73,0x68,0x0,0x0,0xd,0x40,0x68,0x65,0x6c,0x6c,0x6f,0x2c,0x20,0x77,0x6f,0x72,0x6c,0x64,0x0,0x0,0x2,0x60,0x0,0x0,0xd,0x50,0x4,0x31,0x30,0x30,0x88,0x1d,0x0,0x6b,0x12,0x6f,0x67,0x1,0x60,0x0,0xd,0x50,0x3,0x89,0x0,0x0,0x1,0x88,0x39,0x0,0x78,0x2,0x67,0x1,0x60,0x0,0x49,0x0,0x2,0x0,0x19,0x0,0x1,0x0,0x8,0xc0,0x5,0x0,0x5,0x0,0x31,0x0,0x4d,0x0]);

const start = performance.now();

const { restore, useWasmModule } = await import('../dist/index.mjs')

const imported = performance.now();

const moduleBytes = await fs.promises.readFile('dist/microvium.wasm');
const module = await WebAssembly.compile(moduleBytes);
useWasmModule(module);

const wasmCompiled = performance.now();

let restoreTime = 0;
let runTime = 0;
let snapshotTime = 0;
const repeatCount = 1000;
for (let i = 0; i < repeatCount; i++) {
  const start = performance.now();
  const vm = await restore(snapshot, { [1]: msg => console.log(msg) })
  restoreTime += performance.now() - start;

  const runStart = performance.now();
  const { [1]: main } = vm.exports;
  main();
  runTime += performance.now() - runStart;

  const snapshotStart = performance.now();
  vm.createSnapshot();
  snapshotTime += performance.now() - snapshotStart;
}

console.log(`import: ${imported - start}ms`)
console.log(`wasm compile: ${wasmCompiled - imported}ms`)
console.log(`restore: ${restoreTime/repeatCount}ms`)
console.log(`run: ${runTime/repeatCount}ms`)
console.log(`snapshot: ${snapshotTime/repeatCount}ms`)

// Note: I've measured a "run" time of about 1.5 ms. I think the longer time here is related to caching.
/*
import: 4.085099995136261ms
wasm compile: 3.413699984550476ms
restore: 0.42025499963760377ms
run: 0.4807183993458748ms
snapshot: 0.014294700026512145ms
*/
